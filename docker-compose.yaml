services:
  app:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - internal
  
  nginx:
    image: nginx:latest
    ports:
      - "81:80"
    volumes:
      - ./docker/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - app
    networks:
      - internal
      - external

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
      MYSQL_DATABASE: '${DB_DATABASE}'
      MYSQL_USER: '${DB_USERNAME}'
      MYSQL_PASSWORD: '${DB_PASSWORD}'
    volumes:
      - ./docker/db_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - internal

  redis:
    image: redis:latest
    volumes:
      - ./docker/redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 10s
      retries: 5
    networks:
      - internal
      
networks:
  internal:
    driver: bridge
  external:
    driver: bridge